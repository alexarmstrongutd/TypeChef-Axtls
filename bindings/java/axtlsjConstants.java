/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package axTLSj;

public interface axtlsjConstants {
  public final static int SSL_SESSION_ID_SIZE = axtlsjJNI.SSL_SESSION_ID_SIZE_get();
  public final static int SSL_CLIENT_AUTHENTICATION = axtlsjJNI.SSL_CLIENT_AUTHENTICATION_get();
  public final static int SSL_SERVER_VERIFY_LATER = axtlsjJNI.SSL_SERVER_VERIFY_LATER_get();
  public final static int SSL_NO_DEFAULT_KEY = axtlsjJNI.SSL_NO_DEFAULT_KEY_get();
  public final static int SSL_DISPLAY_STATES = axtlsjJNI.SSL_DISPLAY_STATES_get();
  public final static int SSL_DISPLAY_BYTES = axtlsjJNI.SSL_DISPLAY_BYTES_get();
  public final static int SSL_DISPLAY_CERTS = axtlsjJNI.SSL_DISPLAY_CERTS_get();
  public final static int SSL_DISPLAY_RSA = axtlsjJNI.SSL_DISPLAY_RSA_get();
  public final static int SSL_CONNECT_IN_PARTS = axtlsjJNI.SSL_CONNECT_IN_PARTS_get();
  public final static int SSL_OK = axtlsjJNI.SSL_OK_get();
  public final static int SSL_NOT_OK = axtlsjJNI.SSL_NOT_OK_get();
  public final static int SSL_ERROR_DEAD = axtlsjJNI.SSL_ERROR_DEAD_get();
  public final static int SSL_CLOSE_NOTIFY = axtlsjJNI.SSL_CLOSE_NOTIFY_get();
  public final static int SSL_ERROR_CONN_LOST = axtlsjJNI.SSL_ERROR_CONN_LOST_get();
  public final static int SSL_ERROR_RECORD_OVERFLOW = axtlsjJNI.SSL_ERROR_RECORD_OVERFLOW_get();
  public final static int SSL_ERROR_SOCK_SETUP_FAILURE = axtlsjJNI.SSL_ERROR_SOCK_SETUP_FAILURE_get();
  public final static int SSL_ERROR_INVALID_HANDSHAKE = axtlsjJNI.SSL_ERROR_INVALID_HANDSHAKE_get();
  public final static int SSL_ERROR_INVALID_PROT_MSG = axtlsjJNI.SSL_ERROR_INVALID_PROT_MSG_get();
  public final static int SSL_ERROR_INVALID_HMAC = axtlsjJNI.SSL_ERROR_INVALID_HMAC_get();
  public final static int SSL_ERROR_INVALID_VERSION = axtlsjJNI.SSL_ERROR_INVALID_VERSION_get();
  public final static int SSL_ERROR_UNSUPPORTED_EXTENSION = axtlsjJNI.SSL_ERROR_UNSUPPORTED_EXTENSION_get();
  public final static int SSL_ERROR_INVALID_SESSION = axtlsjJNI.SSL_ERROR_INVALID_SESSION_get();
  public final static int SSL_ERROR_NO_CIPHER = axtlsjJNI.SSL_ERROR_NO_CIPHER_get();
  public final static int SSL_ERROR_INVALID_CERT_HASH_ALG = axtlsjJNI.SSL_ERROR_INVALID_CERT_HASH_ALG_get();
  public final static int SSL_ERROR_BAD_CERTIFICATE = axtlsjJNI.SSL_ERROR_BAD_CERTIFICATE_get();
  public final static int SSL_ERROR_INVALID_KEY = axtlsjJNI.SSL_ERROR_INVALID_KEY_get();
  public final static int SSL_ERROR_FINISHED_INVALID = axtlsjJNI.SSL_ERROR_FINISHED_INVALID_get();
  public final static int SSL_ERROR_NO_CERT_DEFINED = axtlsjJNI.SSL_ERROR_NO_CERT_DEFINED_get();
  public final static int SSL_ERROR_NO_CLIENT_RENOG = axtlsjJNI.SSL_ERROR_NO_CLIENT_RENOG_get();
  public final static int SSL_ERROR_NOT_SUPPORTED = axtlsjJNI.SSL_ERROR_NOT_SUPPORTED_get();
  public final static int SSL_X509_OFFSET = axtlsjJNI.SSL_X509_OFFSET_get();
  public final static int SSL_ALERT_TYPE_WARNING = axtlsjJNI.SSL_ALERT_TYPE_WARNING_get();
  public final static int SLL_ALERT_TYPE_FATAL = axtlsjJNI.SLL_ALERT_TYPE_FATAL_get();
  public final static int SSL_ALERT_CLOSE_NOTIFY = axtlsjJNI.SSL_ALERT_CLOSE_NOTIFY_get();
  public final static int SSL_ALERT_UNEXPECTED_MESSAGE = axtlsjJNI.SSL_ALERT_UNEXPECTED_MESSAGE_get();
  public final static int SSL_ALERT_BAD_RECORD_MAC = axtlsjJNI.SSL_ALERT_BAD_RECORD_MAC_get();
  public final static int SSL_ALERT_RECORD_OVERFLOW = axtlsjJNI.SSL_ALERT_RECORD_OVERFLOW_get();
  public final static int SSL_ALERT_HANDSHAKE_FAILURE = axtlsjJNI.SSL_ALERT_HANDSHAKE_FAILURE_get();
  public final static int SSL_ALERT_BAD_CERTIFICATE = axtlsjJNI.SSL_ALERT_BAD_CERTIFICATE_get();
  public final static int SSL_ALERT_UNSUPPORTED_CERTIFICATE = axtlsjJNI.SSL_ALERT_UNSUPPORTED_CERTIFICATE_get();
  public final static int SSL_ALERT_CERTIFICATE_EXPIRED = axtlsjJNI.SSL_ALERT_CERTIFICATE_EXPIRED_get();
  public final static int SSL_ALERT_CERTIFICATE_UNKNOWN = axtlsjJNI.SSL_ALERT_CERTIFICATE_UNKNOWN_get();
  public final static int SSL_ALERT_ILLEGAL_PARAMETER = axtlsjJNI.SSL_ALERT_ILLEGAL_PARAMETER_get();
  public final static int SSL_ALERT_UNKNOWN_CA = axtlsjJNI.SSL_ALERT_UNKNOWN_CA_get();
  public final static int SSL_ALERT_DECODE_ERROR = axtlsjJNI.SSL_ALERT_DECODE_ERROR_get();
  public final static int SSL_ALERT_DECRYPT_ERROR = axtlsjJNI.SSL_ALERT_DECRYPT_ERROR_get();
  public final static int SSL_ALERT_INVALID_VERSION = axtlsjJNI.SSL_ALERT_INVALID_VERSION_get();
  public final static int SSL_ALERT_NO_RENEGOTIATION = axtlsjJNI.SSL_ALERT_NO_RENEGOTIATION_get();
  public final static int SSL_ALERT_UNSUPPORTED_EXTENSION = axtlsjJNI.SSL_ALERT_UNSUPPORTED_EXTENSION_get();
  public final static int SSL_AES128_SHA = axtlsjJNI.SSL_AES128_SHA_get();
  public final static int SSL_AES256_SHA = axtlsjJNI.SSL_AES256_SHA_get();
  public final static int SSL_AES128_SHA256 = axtlsjJNI.SSL_AES128_SHA256_get();
  public final static int SSL_AES256_SHA256 = axtlsjJNI.SSL_AES256_SHA256_get();
  public final static int SSL_BUILD_SKELETON_MODE = axtlsjJNI.SSL_BUILD_SKELETON_MODE_get();
  public final static int SSL_BUILD_SERVER_ONLY = axtlsjJNI.SSL_BUILD_SERVER_ONLY_get();
  public final static int SSL_BUILD_ENABLE_VERIFICATION = axtlsjJNI.SSL_BUILD_ENABLE_VERIFICATION_get();
  public final static int SSL_BUILD_ENABLE_CLIENT = axtlsjJNI.SSL_BUILD_ENABLE_CLIENT_get();
  public final static int SSL_BUILD_FULL_MODE = axtlsjJNI.SSL_BUILD_FULL_MODE_get();
  public final static int SSL_BUILD_MODE = axtlsjJNI.SSL_BUILD_MODE_get();
  public final static int SSL_MAX_CERT_CFG_OFFSET = axtlsjJNI.SSL_MAX_CERT_CFG_OFFSET_get();
  public final static int SSL_MAX_CA_CERT_CFG_OFFSET = axtlsjJNI.SSL_MAX_CA_CERT_CFG_OFFSET_get();
  public final static int SSL_HAS_PEM = axtlsjJNI.SSL_HAS_PEM_get();
  public final static int SSL_DEFAULT_SVR_SESS = axtlsjJNI.SSL_DEFAULT_SVR_SESS_get();
  public final static int SSL_DEFAULT_CLNT_SESS = axtlsjJNI.SSL_DEFAULT_CLNT_SESS_get();
  public final static int SSL_X509_CERT_COMMON_NAME = axtlsjJNI.SSL_X509_CERT_COMMON_NAME_get();
  public final static int SSL_X509_CERT_ORGANIZATION = axtlsjJNI.SSL_X509_CERT_ORGANIZATION_get();
  public final static int SSL_X509_CERT_ORGANIZATIONAL_NAME = axtlsjJNI.SSL_X509_CERT_ORGANIZATIONAL_NAME_get();
  public final static int SSL_X509_CERT_LOCATION = axtlsjJNI.SSL_X509_CERT_LOCATION_get();
  public final static int SSL_X509_CERT_COUNTRY = axtlsjJNI.SSL_X509_CERT_COUNTRY_get();
  public final static int SSL_X509_CERT_STATE = axtlsjJNI.SSL_X509_CERT_STATE_get();
  public final static int SSL_X509_CA_CERT_COMMON_NAME = axtlsjJNI.SSL_X509_CA_CERT_COMMON_NAME_get();
  public final static int SSL_X509_CA_CERT_ORGANIZATION = axtlsjJNI.SSL_X509_CA_CERT_ORGANIZATION_get();
  public final static int SSL_X509_CA_CERT_ORGANIZATIONAL_NAME = axtlsjJNI.SSL_X509_CA_CERT_ORGANIZATIONAL_NAME_get();
  public final static int SSL_X509_CA_CERT_LOCATION = axtlsjJNI.SSL_X509_CA_CERT_LOCATION_get();
  public final static int SSL_X509_CA_CERT_COUNTRY = axtlsjJNI.SSL_X509_CA_CERT_COUNTRY_get();
  public final static int SSL_X509_CA_CERT_STATE = axtlsjJNI.SSL_X509_CA_CERT_STATE_get();
  public final static int SSL_OBJ_X509_CERT = axtlsjJNI.SSL_OBJ_X509_CERT_get();
  public final static int SSL_OBJ_X509_CACERT = axtlsjJNI.SSL_OBJ_X509_CACERT_get();
  public final static int SSL_OBJ_RSA_KEY = axtlsjJNI.SSL_OBJ_RSA_KEY_get();
  public final static int SSL_OBJ_PKCS8 = axtlsjJNI.SSL_OBJ_PKCS8_get();
  public final static int SSL_OBJ_PKCS12 = axtlsjJNI.SSL_OBJ_PKCS12_get();
}
