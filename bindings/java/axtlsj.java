/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package axTLSj;

public class axtlsj implements axtlsjConstants {
  public static int ssl_read(int ssl, Object in_data) {
    return axtlsjJNI.ssl_read(ssl, in_data);
  }

  public static int getFd(Object sock) {
    return axtlsjJNI.getFd(sock);
  }

  public static int ssl_ctx_new(int options, int num_sessions) {
    return axtlsjJNI.ssl_ctx_new(options, num_sessions);
  }

  public static void ssl_ctx_free(int ssl_ctx) {
    axtlsjJNI.ssl_ctx_free(ssl_ctx);
  }

  public static SWIGTYPE_p_SSL_EXTENSIONS ssl_ext_new() {
    long cPtr = axtlsjJNI.ssl_ext_new();
    return (cPtr == 0) ? null : new SWIGTYPE_p_SSL_EXTENSIONS(cPtr, false);
  }

  public static void ssl_ext_free(SWIGTYPE_p_SSL_EXTENSIONS ssl_ext) {
    axtlsjJNI.ssl_ext_free(SWIGTYPE_p_SSL_EXTENSIONS.getCPtr(ssl_ext));
  }

  public static int ssl_server_new(int ssl_ctx, int client_fd) {
    return axtlsjJNI.ssl_server_new(ssl_ctx, client_fd);
  }

  public static int ssl_client_new(int ssl_ctx, int client_fd, byte[] session_id, byte sess_id_size, SWIGTYPE_p_SSL_EXTENSIONS ssl_ext) {
    return axtlsjJNI.ssl_client_new(ssl_ctx, client_fd, session_id, sess_id_size, SWIGTYPE_p_SSL_EXTENSIONS.getCPtr(ssl_ext));
  }

  public static void ssl_free(int ssl) {
    axtlsjJNI.ssl_free(ssl);
  }

  public static int ssl_write(int ssl, byte[] out_data, int out_len) {
    return axtlsjJNI.ssl_write(ssl, out_data, out_len);
  }

  public static int ssl_find(int ssl_ctx, int client_fd) {
    return axtlsjJNI.ssl_find(ssl_ctx, client_fd);
  }

  public static byte[] ssl_get_session_id(int ssl) {
    return axtlsjJNI.ssl_get_session_id(ssl);
  }

  public static byte ssl_get_session_id_size(int ssl) {
    return axtlsjJNI.ssl_get_session_id_size(ssl);
  }

  public static byte ssl_get_cipher_id(int ssl) {
    return axtlsjJNI.ssl_get_cipher_id(ssl);
  }

  public static int ssl_handshake_status(int ssl) {
    return axtlsjJNI.ssl_handshake_status(ssl);
  }

  public static int ssl_get_config(int offset) {
    return axtlsjJNI.ssl_get_config(offset);
  }

  public static void ssl_display_error(int error_code) {
    axtlsjJNI.ssl_display_error(error_code);
  }

  public static int ssl_verify_cert(int ssl) {
    return axtlsjJNI.ssl_verify_cert(ssl);
  }

  public static String ssl_get_cert_dn(int ssl, int component) {
    return axtlsjJNI.ssl_get_cert_dn(ssl, component);
  }

  public static String ssl_get_cert_subject_alt_dnsname(int ssl, int dnsindex) {
    return axtlsjJNI.ssl_get_cert_subject_alt_dnsname(ssl, dnsindex);
  }

  public static int ssl_renegotiate(int ssl) {
    return axtlsjJNI.ssl_renegotiate(ssl);
  }

  public static int ssl_obj_load(int ssl_ctx, int obj_type, String filename, String password) {
    return axtlsjJNI.ssl_obj_load(ssl_ctx, obj_type, filename, password);
  }

  public static int ssl_obj_memory_load(int ssl_ctx, int obj_type, byte[] data, int len, String password) {
    return axtlsjJNI.ssl_obj_memory_load(ssl_ctx, obj_type, data, len, password);
  }

  public static String ssl_version() {
    return axtlsjJNI.ssl_version();
  }

}
